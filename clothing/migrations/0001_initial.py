# Generated by Django 2.0 on 2022-05-18 18:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clothes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('unique_id', models.CharField(max_length=256)),
                ('clothes_id', models.IntegerField()),
                ('clothes_url', models.CharField(blank=True, max_length=256)),
                ('shop', models.CharField(blank=True, max_length=256)),
                ('price', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'Clothes',
            },
        ),
        migrations.CreateModel(
            name='Clothes_hot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_number', models.IntegerField()),
                ('clothes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clothing.Clothes')),
            ],
            options={
                'db_table': 'Clothes_hot',
                'ordering': ['-rating_number'],
            },
        ),
        migrations.CreateModel(
            name='Clothes_rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('comment', models.TextField(blank=True)),
                ('clothes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clothing.Clothes')),
            ],
            options={
                'db_table': 'Clothes_rating',
            },
        ),
        migrations.CreateModel(
            name='Clothes_similarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity', models.FloatField()),
                ('clothes_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clothes_source', to='clothing.Clothes')),
                ('clothes_target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clothes_target', to='clothing.Clothes')),
            ],
            options={
                'ordering': ['-similarity'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Genre',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('password', models.CharField(max_length=256)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('rating_clothes', models.ManyToManyField(through='clothing.Clothes_rating', to='clothing.Clothes')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.AddField(
            model_name='clothes_rating',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clothing.User'),
        ),
        migrations.AddField(
            model_name='clothes',
            name='clothes_similarity',
            field=models.ManyToManyField(through='clothing.Clothes_similarity', to='clothing.Clothes'),
        ),
        migrations.AddField(
            model_name='clothes',
            name='genre',
            field=models.ManyToManyField(to='clothing.Genre'),
        ),
    ]
